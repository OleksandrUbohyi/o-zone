'use strict';

// checkbox

function toggleCheckbox() {
    const checkboxes = document.querySelectorAll('.filter-check_checkbox');

    checkboxes.forEach((item) => {
        item.addEventListener('change', function () {
            if (this.checked) {
                this.nextElementSibling.classList.add('checked');
            } else {
                this.nextElementSibling.classList.remove('checked');
            }
        });
    });
}

// end checkbox

// –∫–æ—Ä–∑–∏–Ω–∞

function toggleCart() {
    const cartBtn = document.querySelector('#cart'),
        modalCart = document.querySelector('.cart'),
        closeBtn = document.querySelector('.cart-close');

    cartBtn.addEventListener('click', () => {
        modalCart.style.display = 'flex';
        document.body.style.overflow = 'hidden';
    });

    closeBtn.addEventListener('click', () => {
        modalCart.style.display = '';
        document.body.style.overflow = '';
    });
}



//end –∫–æ—Ä–∑–∏–Ω–∞



// —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π

function addCard() {
    const cards = document.querySelectorAll('.goods .card'),
        cartWrapper = document.querySelector('.cart-wrapper'),
        cartEmpty = document.getElementById('cart-empty'),
        countGoods = document.querySelector('.counter');

    cards.forEach((card) => {
        const btn = card.querySelector('button');
        btn.addEventListener('click', () => {

            const cardClone = card.cloneNode(true); // true - –∫–ª–æ–Ω–∏—Ä—É–µ—Ç —Ç–∞–∫–∂–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            cartWrapper.appendChild(cardClone);
            // cartEmpty.remove();
            showData();

            const removeBtn = cardClone.querySelector('.btn'); // –ø–æ–ª—É—á–∞–µ–º –æ–¥–Ω—É –∫–Ω–æ–ø–∫—É –≤ –æ–¥–Ω–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
            removeBtn.textContent = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';

            removeBtn.addEventListener('click', () => {
                cardClone.remove();
                showData();

            });
        });
    });

    function showData() {

        const cardsCart = cartWrapper.querySelectorAll('.card'),
            cardsPrice = cartWrapper.querySelectorAll('.card-price'),
            cartTotal = document.querySelector('.cart-total span');

        //–ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        countGoods.textContent = cardsCart.length;

        //–ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
        let sum = 0;

        cardsPrice.forEach((cardPrice) => {
            let price = parseFloat(cardPrice.textContent);
            sum += price;
        });

        cartTotal.textContent = sum;

        if (cardsCart.length === 0) {
            cartWrapper.appendChild(cartEmpty);

        } else {
            cartEmpty.remove();
        }
    }
}
// end —Ä–∞–±–æ—Ç–∞ —Å –∫–æ—Ä–∑–∏–Ω–æ–π



//—Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏

function actionPage() { // —Ñ–∏–ª—å—Ç—Ä —Ü–µ–Ω—ã –∏ –ø–æ–∏—Å–∫

    const cards = document.querySelectorAll('.goods .card'),
        discountCheckbox = document.getElementById('discount-checkbox'),
        min = document.getElementById('min'),
        max = document.getElementById('max'),
        search = document.querySelector('.search-wrapper_input'),
        searchBtn = document.querySelector('.search-btn');


    discountCheckbox.addEventListener('change', filter);
    min.addEventListener('change', filter); // —Å–ª—É—à–∞—Ç–µ–ª—å –º–æ–∂–Ω–æ –∏ –Ω–∞ —Å–æ–±—ã—Ç–∏–µ input, –Ω–æ –±—É–¥–µ—Ç –±–æ–ª–µ–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –±—É–¥–µ—Ç –±–æ–ª—å—à–µ —Ä–∞–∑ —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Å–∏—Å—Ç–µ–º—É.
    max.addEventListener('change', filter);


    function filter() { //–ø–∏—à–µ–º –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–∏ action page
        cards.forEach((card) => {
            //–æ–±—ä–µ–¥–∏–Ω—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø–µ—Ä–µ–±–æ—Ä–∞
            const cardPrice = card.querySelector('.card-price'),
                price = parseFloat(cardPrice.textContent), //—É–±–∏—Ä–∞–µ–º –∑–Ω–∞–∫ –≤–∞–ª—é—Ç—ã
                discount = card.querySelector('.card-sale');

            if ((min.value && price < min.value) || (max.value && price > max.value)) {
                card.parentNode.style.display = 'none';
                // –∏–ª–∏  card.parentElement.remove();
            } else if (discountCheckbox.checked && !discount) {//–ø–æ—á–µ–º—É –±–µ–∑ –¥–∏—Å–∫–∞—É–Ω—Ç–∞? - —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –±–µ–∑ –∞–∫—Ü–∏–∏
                card.parentNode.style.display = 'none';
            } else {
                card.parentNode.style.display = '';
                /* –∏–ª–∏
                  const goods = document.querySelector('.goods');
                  goods.appendChild(card.parentElement);
               */
            }
        });
    }
    //end —Ñ–∏–ª—å—Ç—Ä


    // –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
    searchBtn.addEventListener('click', () => {
        const searchText = new RegExp(search.value.trim(), 'i');
        // —Ñ–ª–∞–≥ "i" –≤ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö –æ—Ç–∫–ª—é—á–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞. –ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ https://regexr.com/

        cards.forEach((card) => {
            const cardTitle = card.querySelector('.card-title');

            if (!searchText.test(cardTitle.textContent)) { // test - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±—É–ª–µ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                // —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é String.includes
                card.parentElement.style.display = 'none';
            } else {
                card.parentElement.style.display = '';
            }
        });
        search.value = '';
    });
}

//end —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–∏





//–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞

function getData() {
    const goodsWrapper = document.querySelector('.goods');
    return fetch('../db/db.json')
        .then((response) => {//then –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å
            if (response.ok) {
                return response.json(); //–æ–±—ä—è–∑–∞—Ç–µ–ª–µ–Ω return
            } else {
                throw new Error('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã. –û—à–∏–±–∫–∞: ' + response.status);
            }
        })
        // .then(data => renderCards(data))
        .then(data => {
            return data; //–≤–æ–∑–≤—Ä–∞—â–∞–µ–º data —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–π then
        })
        .catch(err => {
            console.warn(err);
            goodsWrapper.innerHTML = '<div style="color: red; font-size: 24px">–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</div>';
        });
    //–µ—Å–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ—á–∫—É - –º–æ–∂–µ—Ç –Ω–µ –ø–∏—Å–∞—Ç—å —Ñ–∏–≥—É—Ä–Ω—ã–µ —Å–∫–æ–±–∫–∏
    //–ª–æ–≤–∏—Ç –≤—Å–µ –æ—à–∏–±–∫–∏, –≤ —Ç.—á. —Ç—É –∫–æ—Ç–æ—Ä—É—é –≤—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞–ª–∏ 
}
// end –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞



// –≤—ã–≤–æ–¥–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ç–æ–≤–∞—Ä–∞
function renderCards(cards) {
    let goodsWrapper = document.querySelector('.goods');
    cards.goods.forEach((good) => {
        let card = document.createElement('div');
        card.className = 'col-12 col-md-6 col-lg-4 col-xl-3';
        // –∏–ª–∏ card.classList.add('col-12', 'col-md-6', 'col-lg-4', 'col-xl-3');
        card.innerHTML = `
            <div class="card" data-category="${good.category}">
            ${ good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}
                <div class="card-img-wrapper">
                    <span class="card-img-top"
                        style="background-image: url('${good.img}')"></span>
                </div>
                <div class="card-body justify-content-between">
                    <div class="card-price" ${good.sale ? 'style="color: red"' : ''}>${good.price} ‚ÇΩ</div>
                    <h5 class="card-title">${good.title}</h5>
                    <button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
                </div>
            </div>
        `;
        goodsWrapper.appendChild(card);
    });
}


function renderCatalog() {
    const cards = document.querySelectorAll('.goods .card'),
        catalogBtn = document.querySelector('.catalog-button'),
        catalogList = document.querySelector('.catalog-list'),
        catalogWrapper = document.querySelector('.catalog'),
        categories = new Set();

    cards.forEach((card) => {
        categories.add(card.dataset.category); // add - –º–µ—Ç–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É –∫–æ–ª–ª–µ–∫—Ü–∏–∏ set –∏ map, –≤ –ø–æ—Ä—è–¥–∫–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    });

    categories.forEach((item) => {
        const li = document.createElement('li');
        li.textContent = item;
        catalogList.appendChild(li);
    });

    catalogBtn.addEventListener('click', (e) => {
        if (catalogWrapper.style.display) {
            catalogWrapper.style.display = '';
        } else {
            catalogWrapper.style.display = 'block';
        }

        if (e.target.tagName === 'LI') {
            cards.forEach((card) => {
                if (card.dataset.category === event.target.textContent) {
                    card.parentElement.style.display = '';
                } else {
                    card.parentElement.style.display = 'none';
                }
            })
        }
    });

}





getData().then(data => {
    renderCards(data);
    toggleCart();
    toggleCheckbox();
    addCard();
    actionPage();
    renderCatalog();
});//getData –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç fetch-–ø—Ä–æ–º–∏—Å, –±—É–¥–µ–º –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–æ–º–∏—Å, –ø–æ—ç—Ç–æ–º—É –≤—ã–∑–æ–≤ —ç—Ç–æ–π —Ñ-–∏ –º–æ–∂–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å –ø–æ–º–æ—â—å—é then
